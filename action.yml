# Copyright (c) 2021 Tailscale Inc & AUTHORS All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.
name: 'Connect Tailscale'
description: 'Connect your GitHub Action workflow to Tailscale'
branding:
  icon: 'arrow-right-circle'
  color: 'gray-dark'
inputs:
  version:
    description: 'Tailscale version to use.'
    required: true
    default: '1.40.1'
  tailscaled_args:
    description: 'Optional additional arguments to `tailscaled`'
    required: false
    default: ''
  tailscale_args:
    description: 'Optional additional arguments to `tailscale up`'
    required: false
    default: ''
  hostname:
    description: 'Fixed hostname to use.'
    required: false
    default: ''
  oauth_client_id:
    description: 'Tailscale OAuth Client ID.'
    required: true
    default: ''
  oauth_client_secret:
    description: 'Tailscale OAuth Client Secret.'
    required: true
    default: ''
runs:
    using: 'composite'
    steps:
      - name: Check Runner OS
        if: ${{ runner.os != 'Linux' }}
        shell: bash
        run: |
          echo "::error title=â›” error hint::Support Linux Only"
          exit 1
      - name: Download Tailscale
        shell: bash
        id: download
        env:
          VERSION: ${{ inputs.version }}
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
      - name: Start Tailscale Daemon
        shell: bash
        run: |
          sudo -E tailscaled \
            ${TAILSCALED_ADDITIONAL_ARGS} 2>~/tailscaled.log &
          # And check that tailscaled came up. The CLI will block for a bit waiting
          # for it. And --json will make it exit with status 0 even if we're logged
          # out (as we will be). Without --json it returns an error if we're not up.
          sudo -E tailscale status --json >/dev/null
      - name: Run Tailscale
        shell: bash
        env:
          TAILSCALED_ADDITIONAL_ARGS: ${{ inputs.tailscaled_args }}
          TAILSCALE_ADDITIONAL_ARGS: ${{ inputs.tailscale_args }}
          HOSTNAME: ${{ inputs.hostname }}
          OAUTH_CLIENT_ID: ${{ inputs.oauth_client_id }}
          OAUTH_CLIENT_SECRET: ${{ inputs.oauth_client_secret }}
        run: |
          ACCESS_TOKEN=$(curl -d "client_id=${OAUTH_CLIENT_ID}" -d "client_secret=${OAUTH_CLIENT_SECRET}" \
               "https://api.tailscale.com/api/v2/oauth/token" | jq -r '.access_token')
          AUTH_TOKEN=$(curl "https://api.tailscale.com/api/v2/tailnet/rollkall.com/keys" \
              -u "$ACCESS_TOKEN:$OAUTH_CLIENT_SECRET" \
              --data-binary '
              {
                  "capabilities": {
                      "devices": {
                          "create": {
                              "reusable": false,
                              "ephemeral": true,
                              "preauthorized": true,
                              "tags": [ "tag:ci-runner" ]
                          }
                      }
                  },
                  "expirySeconds": 1800
              }' | jq -r '.key'
          )
          if [ -z "${HOSTNAME}" ]; then
            HOSTNAME="github-$(cat /etc/hostname)"
          fi
          sudo -E tailscale up --authkey ${AUTH_TOKEN} --hostname=${HOSTNAME} --accept-routes ${TAILSCALE_ADDITIONAL_ARGS}
